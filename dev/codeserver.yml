apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-server
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: code-server
  template:
    metadata:
      labels:
        app: code-server
    spec:
      containers:
        - name: code-server
          image:  codercom/code-server:latest
          imagePullPolicy: IfNotPresent
#          resources:
#            limits:
#              memory: "512Mi"
#              cpu: "500m"
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /home/coder
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: code-server
---
apiVersion: v1
kind: Service
metadata:
  name: code-server
  namespace: dev
spec:
  selector:
    app: code-server
  type: LoadBalancer
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 80
  externalTrafficPolicy: Cluster
---
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  name: code-server
  namespace: dev
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
  labels:
    app.kubernetes.io/name: code-server
    app.kubernetes.io/instance: code-server
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "32Gi"